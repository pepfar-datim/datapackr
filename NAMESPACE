# Generated by roxygen2: do not edit by hand

S3method(appendMessage,MessageQueue)
S3method(printMessages,MessageQueue)
export("%>%")
export("%missing%")
export("%|%")
export("%||%")
export(.testInvalidIndicatorCodes)
export(MessageQueue)
export(add_dp_psnu)
export(addcols)
export(adornMechanisms)
export(adornPSNUs)
export(adorn_import_file)
export(analyze_eid_2mo)
export(analyze_indexpos_ratio)
export(analyze_linkage)
export(analyze_pmtctknownpos)
export(analyze_retention)
export(analyze_tbknownpos)
export(analyze_vmmc_indeterminate)
export(api_call)
export(api_fields)
export(api_filter)
export(api_get)
export(api_sql_call)
export(api_version)
export(appendMessage)
export(canReadFile)
export(checkAnalytics)
export(checkColStructure)
export(checkComments)
export(checkDataPackName)
export(checkDuplicateRows)
export(checkFormulas)
export(checkInvalidOrgUnits)
export(checkMechanisms)
export(checkMissingMetadata)
export(checkNumericValues)
export(checkPSNUData)
export(checkResultsArchive)
export(checkStructure)
export(checkTemplatePath)
export(checkWB)
export(check_PSNUs)
export(check_cop_year)
export(check_country_uids)
export(check_params)
export(check_schema)
export(check_season)
export(check_tool)
export(compareData_DatapackVsDatim)
export(compareData_OpuDatapackVsDatim)
export(compareTemplateToSchema)
export(countryUIDs_homeCell)
export(createAnalytics)
export(createDataPack)
export(createKeychainInfo)
export(createTestDataset)
export(create_play_spectrum_output)
export(dataPackName_homeCell)
export(default_catOptCombo)
export(defunctDisaggs)
export(evaluateIndicators)
export(exportDistributedDataToDATIM)
export(exportPackr)
export(exportSubnatToDATIM)
export(fetchPrioritizationTable)
export(generateApprovalMemo)
export(getCOPDataFromDATIM)
export(getCountries)
export(getCurrentCOPYear)
export(getDataValueSets)
export(getDatasetUids)
export(getFY22Prioritizations)
export(getHTSModality)
export(getIMPATTLevels)
export(getMapDataPack_DATIM_DEs_COCs)
export(getMechanismView)
export(getMechanismViewFromDATIM)
export(getMemoIndicators)
export(getNumeratorDenominator)
export(getOPUDataFromDATIM)
export(getOUFromCountryUIDs)
export(getPSNUs)
export(getSaneName)
export(getTechArea)
export(getValidCategoryOptions)
export(handshakeFile)
export(headerRow)
export(interactive_message)
export(interactive_print)
export(interactive_warning)
export(is_uidish)
export(loadDataPack)
export(map_COCs_to_COs)
export(map_Cs_to_COs)
export(memoStructure)
export(packDataPack)
export(packDataPackSheet)
export(packDataPackSheets)
export(packForDATIM)
export(packForDATIM_MER)
export(packForDATIM_OPU)
export(packForDATIM_UndistributedMER)
export(packForPAW)
export(packOPUDataPack)
export(packPSNUxIM)
export(packSNUxIM)
export(packSNUxIM_2020)
export(packSNUxIM_OPU)
export(parse_maybe_number)
export(paste_dataframe)
export(paste_oxford)
export(pick_schema)
export(pick_template_path)
export(preparePartnerMemoTable)
export(preparePrioTable)
export(prepareSheetData)
export(prepare_model_data.PSNUxIM)
export(printMessages)
export(prioritization_dict)
export(pullDATIMCodeList)
export(pullFullCodeList)
export(pull_COPindicators)
export(round_trunc)
export(rowMax)
export(separateDataSets)
export(seperateIndicatorMetadata)
export(skip_tabs)
export(strip_wb_NAs)
export(swapColumns)
export(toolName_homeCell)
export(unPackCountryUIDs)
export(unPackDataPack)
export(unPackDataPackName)
export(unPackDataPackSheet)
export(unPackOPUDataPack)
export(unPackOPU_PSNUxIM)
export(unPackSNUxIM)
export(unPackSchema_datapack)
export(unPackSheets)
export(unPackTool)
export(validateSchema)
export(validationSummary)
export(writeHomeTab)
export(writePSNUxIM)
importFrom(data.table,":=")
importFrom(lazyeval,interp)
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
importFrom(magrittr,`%>%`)
importFrom(plyr,ldply)
importFrom(rlang,`%|%`)
importFrom(rlang,`%||%`)
importFrom(rlang,is_character)
importFrom(rlist,list.remove)
importFrom(stats,complete.cases)
importFrom(stringr,str_detect)
importFrom(stringr,str_extract)
importFrom(tools,file_ext)
importFrom(utils,URLencode)
importFrom(utils,capture.output)
importFrom(utils,packageVersion)
